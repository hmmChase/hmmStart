{"version":3,"sources":["../../src/utils/accessToken.js"],"names":["createAccessToken","userId","secret","Buffer","from","process","env","ACCESS_TOKEN_SECRET","options","expiresIn","accessTokenExpiryTime","jwt","sign","verifyAccessToken","accessToken","payload","verify","console","log","error","AuthenticationError"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AAEO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,MAAM,EAAI;AACzC,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYC,OAAO,CAACC,GAAR,CAAYC,mBAAxB,EAA6C,QAA7C,CAAf;AAEA,MAAMC,OAAO,GAAG;AAAEC,IAAAA,SAAS,EAAEC;AAAb,GAAhB;AAEA,SAAOC,yBAAIC,IAAJ,CAAS;AAAEX,IAAAA,MAAM,EAANA;AAAF,GAAT,EAAqBC,MAArB,EAA6BM,OAA7B,CAAP;AACD,CANM;;;;AAQA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,WAAW,EAAI;AAC9C,MAAMZ,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYC,OAAO,CAACC,GAAR,CAAYC,mBAAxB,EAA6C,QAA7C,CAAf;;AAEA,MAAI;AACF;AACA,QAAMQ,OAAO,GAAGJ,yBAAIK,MAAJ,CAAWF,WAAX,EAAwBZ,MAAxB,CAAhB;;AAEAe,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,OAAxB;AAEA,WAAOA,OAAP;AACD,GAPD,CAOE,OAAOI,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,KAAvB,EADc,CAGd;;AACA,UAAM,IAAIC,wCAAJ,CAAwB,yBAAxB,CAAN;AACD;AACF,CAhBM","sourcesContent":["import { AuthenticationError } from 'apollo-server-express';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nimport { accessTokenExpiryTime } from '../config';\r\n\r\nexport const createAccessToken = userId => {\r\n  const secret = Buffer.from(process.env.ACCESS_TOKEN_SECRET, 'base64');\r\n\r\n  const options = { expiresIn: accessTokenExpiryTime };\r\n\r\n  return jwt.sign({ userId }, secret, options);\r\n};\r\n\r\nexport const verifyAccessToken = accessToken => {\r\n  const secret = Buffer.from(process.env.ACCESS_TOKEN_SECRET, 'base64');\r\n\r\n  try {\r\n    // Return the decoded payload if the signature is valid and JWT not expired\r\n    const payload = jwt.verify(accessToken, secret);\r\n\r\n    console.log('payload:', payload);\r\n\r\n    return payload;\r\n  } catch (error) {\r\n    console.log('error: ', error);\r\n\r\n    // If not, throw error\r\n    throw new AuthenticationError('user.invalidCredentials');\r\n  }\r\n};\r\n"],"file":"accessToken.js"}