{"version":3,"sources":["../../src/prisma/seed.js"],"names":["require","PrismaClient","bcrypt","prisma","ideas","amtIdeas","i","push","content","main","console","log","user","hash","create","email","password","role","data","admin","error","process","exit","$disconnect"],"mappings":";;;;;;;;AAAA,eAAyBA,OAAO,CAAC,gBAAD,CAAhC;AAAA,IAAQC,YAAR,YAAQA,YAAR;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB,C,CAEA;AACA;;;AAEA,IAAMG,MAAM,GAAG,IAAIF,YAAJ,EAAf;;AAEA,IAAMG,KAAK,GAAG,iBAAM;AAClB,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAMD,KAAK,GAAG,EAAd;;AAEA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAApB,EAA8BC,CAAC,EAA/B;AACEF,IAAAA,KAAK,CAACG,IAAN,CAAW;AAAEC,MAAAA,OAAO,EAAE,iBAAiBF;AAA5B,KAAX;AADF;;AAGA,SAAOF,KAAP;AACD,CARD;;AAUA,IAAMK,IAAI;AAAA,2FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AADW,0BAGQR,MAAM,CAACS,IAHf;AAAA;AAAA,mBAMSV,MAAM,CAACW,IAAP,CAAY,UAAZ,EAAwB,EAAxB,CANT;;AAAA;AAAA;AAAA,0BAQA;AAAEC,cAAAA,MAAM,EAAEV,KAAK;AAAf,aARA;AAAA;AAKPW,cAAAA,KALO,EAKA,gBALA;AAMPC,cAAAA,QANO;AAOPC,cAAAA,IAPO,EAOD,MAPC;AAQPb,cAAAA,KARO;AAAA;AAAA;AAITc,cAAAA,IAJS;AAAA;AAAA;AAAA,+BAGoBJ,MAHpB;;AAAA;AAGLF,YAAAA,IAHK;AAYXF,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,IAA9B;AAZW,0BAcST,MAAM,CAACS,IAdhB;AAAA;AAAA,mBAiBSV,MAAM,CAACW,IAAP,CAAY,WAAZ,EAAyB,EAAzB,CAjBT;;AAAA;AAAA;AAAA;AAgBPE,cAAAA,KAhBO,EAgBA,iBAhBA;AAiBPC,cAAAA,QAjBO;AAkBPC,cAAAA,IAlBO,EAkBD;AAlBC;AAAA;AAeTC,cAAAA,IAfS;AAAA;AAAA;AAAA,+BAcqBJ,MAdrB;;AAAA;AAcLK,YAAAA,KAdK;AAsBXT,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BQ,KAA/B;;AAtBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJV,IAAI;AAAA;AAAA;AAAA,GAAV;;AAyBAA,IAAI,WAAJ,CACS,UAAAW,KAAK,EAAI;AACdV,EAAAA,OAAO,CAACU,KAAR,CAAcA,KAAd;AAEAC,EAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD,CALH,yGAMW;AAAA;AAAA;AAAA;AAAA;AACPZ,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AADO;AAAA,iBAGDR,MAAM,CAACoB,WAAP,EAHC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CANX,I,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["const { PrismaClient } = require('@prisma/client');\r\nconst bcrypt = require('bcryptjs');\r\n\r\n// 'npm run seed' to seed\r\n//? npx prisma db seed --schema=./src/prisma/schema.prisma --preview-feature\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nconst ideas = () => {\r\n  const amtIdeas = 10;\r\n  const ideas = [];\r\n\r\n  for (let i = 1; i < amtIdeas; i++)\r\n    ideas.push({ content: 'seeded idea ' + i });\r\n\r\n  return ideas;\r\n};\r\n\r\nconst main = async () => {\r\n  console.log('Start seeding...');\r\n\r\n  const user = await prisma.user.create({\r\n    data: {\r\n      email: 'user@email.com',\r\n      password: await bcrypt.hash('user123$', 10),\r\n      role: 'USER',\r\n      ideas: { create: ideas() }\r\n    }\r\n  });\r\n\r\n  console.log('Created user: ', user);\r\n\r\n  const admin = await prisma.user.create({\r\n    data: {\r\n      email: 'admin@email.com',\r\n      password: await bcrypt.hash('admin123$', 10),\r\n      role: 'ADMIN'\r\n    }\r\n  });\r\n\r\n  console.log('Created admin: ', admin);\r\n};\r\n\r\nmain()\r\n  .catch(error => {\r\n    console.error(error);\r\n\r\n    process.exit(1);\r\n  })\r\n  .finally(async () => {\r\n    console.log('Seeding finished.');\r\n\r\n    await prisma.$disconnect();\r\n  });\r\n\r\n// const userData = [\r\n//   {\r\n//     email: 'admin@email.com',\r\n//     password: async () => await bcrypt.hash('admin123$', 10),\r\n//     role: 'ADMIN'\r\n//   },\r\n//   {\r\n//     email: 'user@email.com',\r\n//     password: async () => await bcrypt.hash('user123$', 10),\r\n//     role: 'USER',\r\n//     ideas: { create: ideas() }\r\n//   }\r\n// ];\r\n\r\n// const main = async () => {\r\n//   console.log('Start seeding...');\r\n\r\n//   try {\r\n//     for (const user of userData) {\r\n//       const createdUser = await prisma.user.create({ data: user });\r\n\r\n//       console.log('Created user: ', createdUser);\r\n//     }\r\n\r\n//     console.log('Seeding finished.');\r\n//   } catch (error) {\r\n//     console.error(error);\r\n\r\n//     process.exit(1);\r\n//   } finally {\r\n//     await prisma.$disconnect();\r\n//   }\r\n// };\r\n"],"file":"seed.js"}