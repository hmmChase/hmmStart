{"version":3,"sources":["../../../src/graphql/resolvers/userResolver.js"],"names":["Query","user","parent","args","ctx","info","prisma","findOne","where","id","users","findMany"],"mappings":";;;;;;eAAe;AACbA,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,IAAI,EAAE,cAACC,MAAD,EAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA6B;AACjC,aAAOD,GAAG,CAACE,MAAJ,CAAWL,IAAX,CAAgBM,OAAhB,CAAwB;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAEN,IAAI,CAACM;AAAX;AAAT,OAAxB,CAAP;AACD,KAJI;AAML;AACAC,IAAAA,KAAK,EAAE,eAACR,MAAD,EAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA6B;AAClC,aAAOD,GAAG,CAACE,MAAJ,CAAWL,IAAX,CAAgBU,QAAhB,EAAP;AACD;AATI,GADM,CAab;;AAba,C","sourcesContent":["export default {\r\n  Query: {\r\n    // Return user matching ID\r\n    user: (parent, args, ctx, info) => {\r\n      return ctx.prisma.user.findOne({ where: { id: args.id } });\r\n    },\r\n\r\n    // Return all users\r\n    users: (parent, args, ctx, info) => {\r\n      return ctx.prisma.user.findMany();\r\n    }\r\n  }\r\n\r\n  // Mutation: {}\r\n};\r\n"],"file":"userResolver.js"}